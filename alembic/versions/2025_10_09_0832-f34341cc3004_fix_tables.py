"""fix tables

Revision ID: f34341cc3004
Revises: f1981fc0a9af
Create Date: 2025-10-09 08:32:55.132933

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f34341cc3004'
down_revision: Union[str, Sequence[str], None] = 'f1981fc0a9af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student_lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('homework', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('admins', sa.Column('active', sa.Boolean(), nullable=False))
    op.drop_constraint(op.f('admins_user_id_fkey'), 'admins', type_='foreignkey')
    op.create_foreign_key(None, 'admins', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('enrollments_teacher_id_fkey'), 'enrollments', type_='foreignkey')
    op.drop_constraint(op.f('enrollments_course_id_fkey'), 'enrollments', type_='foreignkey')
    op.drop_constraint(op.f('enrollments_student_id_fkey'), 'enrollments', type_='foreignkey')
    op.create_foreign_key(None, 'enrollments', 'courses', ['course_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'enrollments', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'enrollments', 'teachers', ['teacher_id'], ['id'], ondelete='CASCADE')
    op.add_column('lessons', sa.Column('lesson_number', sa.Integer(), nullable=False))
    op.add_column('lessons', sa.Column('content', sa.String(), nullable=True))
    op.drop_constraint(op.f('lessons_course_id_fkey'), 'lessons', type_='foreignkey')
    op.create_foreign_key(None, 'lessons', 'courses', ['course_id'], ['id'], ondelete='CASCADE')
    op.drop_column('lessons', 'date')
    op.drop_column('lessons', 'homework')
    op.add_column('students', sa.Column('active', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'students', ['user_id'])
    op.drop_constraint(op.f('students_user_id_fkey'), 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('teachers', sa.Column('active', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'teachers', ['user_id'])
    op.drop_constraint(op.f('teachers_user_id_fkey'), 'teachers', type_='foreignkey')
    op.create_foreign_key(None, 'teachers', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('user_roles_association_user_id_fkey'), 'user_roles_association', type_='foreignkey')
    op.drop_constraint(op.f('user_roles_association_role_id_fkey'), 'user_roles_association', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles_association', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_roles_association', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('user_schedules_course_id_fkey'), 'user_schedules', type_='foreignkey')
    op.drop_constraint(op.f('user_schedules_user_id_fkey'), 'user_schedules', type_='foreignkey')
    op.create_foreign_key(None, 'user_schedules', 'courses', ['course_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'user_schedules', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_schedules', type_='foreignkey')
    op.drop_constraint(None, 'user_schedules', type_='foreignkey')
    op.create_foreign_key(op.f('user_schedules_user_id_fkey'), 'user_schedules', 'users', ['user_id'], ['id'])
    op.create_foreign_key(op.f('user_schedules_course_id_fkey'), 'user_schedules', 'courses', ['course_id'], ['id'])
    op.drop_constraint(None, 'user_roles_association', type_='foreignkey')
    op.drop_constraint(None, 'user_roles_association', type_='foreignkey')
    op.create_foreign_key(op.f('user_roles_association_role_id_fkey'), 'user_roles_association', 'roles', ['role_id'], ['id'])
    op.create_foreign_key(op.f('user_roles_association_user_id_fkey'), 'user_roles_association', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'teachers', type_='foreignkey')
    op.create_foreign_key(op.f('teachers_user_id_fkey'), 'teachers', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'teachers', type_='unique')
    op.drop_column('teachers', 'active')
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key(op.f('students_user_id_fkey'), 'students', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'students', type_='unique')
    op.drop_column('students', 'active')
    op.add_column('lessons', sa.Column('homework', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('lessons', sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'lessons', type_='foreignkey')
    op.create_foreign_key(op.f('lessons_course_id_fkey'), 'lessons', 'courses', ['course_id'], ['id'])
    op.drop_column('lessons', 'content')
    op.drop_column('lessons', 'lesson_number')
    op.drop_constraint(None, 'enrollments', type_='foreignkey')
    op.drop_constraint(None, 'enrollments', type_='foreignkey')
    op.drop_constraint(None, 'enrollments', type_='foreignkey')
    op.create_foreign_key(op.f('enrollments_student_id_fkey'), 'enrollments', 'students', ['student_id'], ['id'])
    op.create_foreign_key(op.f('enrollments_course_id_fkey'), 'enrollments', 'courses', ['course_id'], ['id'])
    op.create_foreign_key(op.f('enrollments_teacher_id_fkey'), 'enrollments', 'teachers', ['teacher_id'], ['id'])
    op.drop_constraint(None, 'admins', type_='foreignkey')
    op.create_foreign_key(op.f('admins_user_id_fkey'), 'admins', 'users', ['user_id'], ['id'])
    op.drop_column('admins', 'active')
    op.drop_table('student_lessons')
    # ### end Alembic commands ###
