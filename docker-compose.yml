services:
  bot:
    container_name: coursesbot
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uv", "run", "main.py"]
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./alembic:/app/bot/alembic
        

  db:
    image: postgres:17
    container_name: coursesbot_db
    environment:
      POSTGRES_DB: ${APP_CONFIG__DB__POSTGRES_DB}
      POSTGRES_USER: ${APP_CONFIG__DB__POSTGRES_USER}
      POSTGRES_PASSWORD: ${APP_CONFIG__DB__POSTGRES_PASSWORD}
    restart: always
    ports:
      - "5435:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: redis:8
    container_name: courses_redis
    restart: always
    environment:
      REDIS_PASSWORD: ${APP_CONFIG__REDIS__PASSWORD}
    ports:
      - "6379:6379"
    expose:
      - "6379"
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${APP_CONFIG__REDIS__PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata: